<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.future.membership.mapper.MembershipDtoMapper" >
  <resultMap id="BaseResultMap" type="com.future.membership.bean.MembershipDto" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="level_id" property="level_id" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="audit" property="audit" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="fitnessNumber" property="fitnessNumber" jdbcType="INTEGER" />
    <result column="leftTimes" property="leftTimes" jdbcType="INTEGER" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, tel, company, level_id, address, audit, email, fitnessNumber, leftTimes, 
    valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.future.membership.bean.MembershipDtoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from membership
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from membership
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from membership
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.future.membership.bean.MembershipDtoExample" >
    delete from membership
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.future.membership.bean.MembershipDto" useGeneratedKeys="true" keyProperty="id">
    insert into membership (id, user_id, tel, 
      company, level_id, address, 
      audit, email, fitnessNumber, 
      leftTimes, valid)
    values (#{id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{tel,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{level_id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{audit,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{fitnessNumber,jdbcType=INTEGER}, 
      #{leftTimes,jdbcType=INTEGER}, #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.future.membership.bean.MembershipDto" useGeneratedKeys="true" keyProperty="id">
    insert into membership
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="level_id != null" >
        level_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="audit != null" >
        audit,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="fitnessNumber != null" >
        fitnessNumber,
      </if>
      <if test="leftTimes != null" >
        leftTimes,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="level_id != null" >
        #{level_id,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="audit != null" >
        #{audit,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="fitnessNumber != null" >
        #{fitnessNumber,jdbcType=INTEGER},
      </if>
      <if test="leftTimes != null" >
        #{leftTimes,jdbcType=INTEGER},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.future.membership.bean.MembershipDtoExample" resultType="java.lang.Integer" >
    select count(*) from membership
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update membership
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null" >
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.level_id != null" >
        level_id = #{record.level_id,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.audit != null" >
        audit = #{record.audit,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.fitnessNumber != null" >
        fitnessNumber = #{record.fitnessNumber,jdbcType=INTEGER},
      </if>
      <if test="record.leftTimes != null" >
        leftTimes = #{record.leftTimes,jdbcType=INTEGER},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update membership
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      level_id = #{record.level_id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      audit = #{record.audit,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      fitnessNumber = #{record.fitnessNumber,jdbcType=INTEGER},
      leftTimes = #{record.leftTimes,jdbcType=INTEGER},
      valid = #{record.valid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.future.membership.bean.MembershipDto" >
    update membership
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="level_id != null" >
        level_id = #{level_id,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="audit != null" >
        audit = #{audit,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="fitnessNumber != null" >
        fitnessNumber = #{fitnessNumber,jdbcType=INTEGER},
      </if>
      <if test="leftTimes != null" >
        leftTimes = #{leftTimes,jdbcType=INTEGER},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.future.membership.bean.MembershipDto" >
    update membership
    set user_id = #{user_id,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      level_id = #{level_id,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      audit = #{audit,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      fitnessNumber = #{fitnessNumber,jdbcType=INTEGER},
      leftTimes = #{leftTimes,jdbcType=INTEGER},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>